{"version":3,"file":"angular-bootstrap.js","sourceRoot":"","sources":["../../src/bootstraps/angular-bootstrap.ts"],"names":[],"mappings":";;;;AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,SAAS,CAAC;AAC/B,OAAO,EAAE,aAAa,EAAE,MAAM,mBAAmB,CAAC;AAGlD,OAAO,EAAE,IAAI,EAAE,MAAM,yBAAyB,CAAC;AAC/C,OAAO,EAAE,gBAAgB,EAAE,MAAM,+BAA+B,CAAC;AACjE,OAAO,EAAE,cAAc,EAAE,MAAM,8BAA8B,CAAC;AAE9D,MAAM;;;;;;;IACK,MAAM,CAAC,SAAS,CAAC,WAA0B,EAAE,YAA4B,EAAE,UAAoB;;QAClG,IAAI,MAAM,GAAG,IAAI,aAAa,EAAE,CAAC;QAEjC,KAAK,IAAI,CAAC,IAAI,MAAM,EAAE;YAClB,mBAAM,MAAM,EAAC,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,mBAAM,MAAM,EAAC,CAAC,CAAC,CAAC,CAAC;SACvF;QAED,IAAI,CAAC,WAAW,EAAE,CAAC,gBAAgB,GAAG;YAClC,mBAAmB,EAAE,YAAY,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,gBAAgB,EAAE;YACzE,WAAW,EAAE,IAAI,IAAI,EAAE;YACvB,WAAW,EAAE,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,cAAc,EAAE;YAC3D,eAAe,EAAE,MAAM;SAC1B,CAAC;;CAET","sourcesContent":["import { Core } from '../core';\nimport { JsonapiConfig } from '../jsonapi-config';\nimport { IRipper } from '../services/json-ripper.interface';\nimport { IStoreService } from '../sources/store-service.interface';\nimport { Http } from '../sources/http.service';\nimport { StoreFakeService } from '../sources/store-fake.service';\nimport { JsonRipperFake } from '../services/json-ripper-fake';\n\nexport class AngularBootstrap {\n    public static bootstrap(user_config: JsonapiConfig, jsonapiStore?: IStoreService, jsonRipper?: IRipper): void {\n        let config = new JsonapiConfig();\n\n        for (let k in config) {\n            (<any>config)[k] = user_config[k] !== undefined ? user_config[k] : (<any>config)[k];\n        }\n\n        Core.getInstance().injectedServices = {\n            JsonapiStoreService: jsonapiStore ? jsonapiStore : new StoreFakeService(),\n            JsonapiHttp: new Http(),\n            json_ripper: jsonRipper ? jsonRipper : new JsonRipperFake(),\n            rsJsonapiConfig: config\n        };\n    }\n}\n"]}