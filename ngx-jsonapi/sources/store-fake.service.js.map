{"version":3,"file":"store-fake.service.js","sourceRoot":"","sources":["../../src/sources/store-fake.service.ts"],"names":[],"mappings":";;;;;;;;;;;;AAMA,MAAM;;;;;;IACW,aAAa,CAAC,IAA2B,EAAE,SAAiB;;YACrE,IAAI,IAAI,KAAK,YAAY,EAAE;gBACvB,yBAAY,EAAE,IAAI,EAAE,EAAE,EAAE,iBAAiB,EAAE,CAAC,EAAE,EAAC;aAClD;YAED,yBAAY,EAAE,iBAAiB,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,EAAC;;;;;;;IAGvD,gBAAgB,CAAC,IAAmB;;YAC7C,OAAO,EAAE,CAAC;;;;;;;;;IAGP,YAAY,CAAC,IAAY,EAAE,SAAiB,EAAE,KAAoB;;;;;;IAElE,cAAc,CAAC,SAAiB,EAAE,KAA+B;;;;IAEjE,UAAU;;;;;;IAEV,iBAAiB,CAAC,IAAY,EAAE,EAAU;;;;;IAE1C,mBAAmB,CAAC,cAAsB;;;;;IAEpC,oBAAoB,CAAC,GAAW;;;CAChD","sourcesContent":["import { IStoreService } from './store-service.interface';\nimport { ICacheableDataCollection } from '../interfaces/data-collection';\nimport { ICacheableDataResource, IDataResource } from '../interfaces/data-resource';\nimport { IObjectsById } from '../interfaces';\n\n/* tslint:disable:no-empty */\nexport class StoreFakeService implements IStoreService {\n    public async getDataObject(type: 'collection' | string, id_or_url: string) {\n        if (type === 'collection') {\n            return <any>{ data: [], cache_last_update: 0 };\n        }\n\n        return <any>{ cache_last_update: Date.now(), id: '', type: '' };\n    }\n\n    public async getDataResources(keys: Array<string>): Promise<IObjectsById<ICacheableDataResource>> {\n        return {};\n    }\n\n    public saveResource(type: string, url_or_id: string, value: IDataResource): void {}\n\n    public saveCollection(url_or_id: string, value: ICacheableDataCollection): void {}\n\n    public clearCache() {}\n\n    public deprecateResource(type: string, id: string) {}\n\n    public deprecateCollection(key_start_with: string) {}\n\n    public async removeObjectsWithKey(key: string) {}\n}\n"]}